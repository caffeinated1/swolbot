{"ast":null,"code":"var _jsxFileName = \"/Users/davidespana/Desktop/swolchat/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: 'Hi! I am your personal chatbot. How can I help you?',\n    sender: 'bot'\n  }]);\n  const handleVoiceInput = () => {\n    window.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new window.SpeechRecognition();\n    recognition.interimResults = false;\n    recognition.start();\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setMessages([...messages, {\n        text: transcript,\n        sender: 'user'\n      }]);\n\n      // Simulate bot response after user input\n      setTimeout(() => {\n        setMessages([...messages, {\n          text: transcript,\n          sender: 'user'\n        }, {\n          text: \"I'm here to help!\",\n          sender: 'bot'\n        }]);\n      }, 1000);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CHATBOT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-bubble ${message.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"voice-button\",\n      onClick: handleVoiceInput,\n      children: [\"Touch to speak\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"mic-icon.png\",\n        alt: \"Microphone Icon\",\n        className: \"mic-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"AV1TTl1We1BkTFXT/A4eOvrgmmI=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","text","sender","handleVoiceInput","window","SpeechRecognition","webkitSpeechRecognition","recognition","interimResults","start","onresult","event","transcript","results","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/davidespana/Desktop/swolchat/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Chatbot.css';\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([\n    { text: 'Hi! I am your personal chatbot. How can I help you?', sender: 'bot' }\n  ]);\n\n  const handleVoiceInput = () => {\n    window.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new window.SpeechRecognition();\n    recognition.interimResults = false;\n\n    recognition.start();\n    recognition.onresult = (event) => {\n      const transcript = event.results[0][0].transcript;\n      setMessages([...messages, { text: transcript, sender: 'user' }]);\n\n      // Simulate bot response after user input\n      setTimeout(() => {\n        setMessages([...messages, { text: transcript, sender: 'user' }, { text: \"I'm here to help!\", sender: 'bot' }]);\n      }, 1000);\n    };\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <h1>CHATBOT</h1>\n      <div className=\"chat-box\">\n        {messages.map((message, index) => (\n          <div key={index} className={`chat-bubble ${message.sender}`}>\n            <p>{message.text}</p>\n          </div>\n        ))}\n        <div className=\"chat-avatar\"></div>\n      </div>\n      <button className=\"voice-button\" onClick={handleVoiceInput}>\n        Touch to speak\n        <img src=\"mic-icon.png\" alt=\"Microphone Icon\" className=\"mic-icon\" />\n      </button>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}